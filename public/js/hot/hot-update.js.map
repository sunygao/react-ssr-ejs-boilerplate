{"version":3,"sources":["webpack:///./src/js/containers/layout/Layout.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AAGA;;AAGC;;;;;;;;;;;;;;;;;;;;;;;;AAJD;;;AAGA;;;AAKA;;sBAEI;;oBAAY,OAAM;8BAAA;;oHACR;;cA+BV,YAAY,YACR;gBAAI,MAAK,cACL;sBAAK,eACL;sBAAK,UACR;AAED;;mBAAO,sBAAsB,MAChC;AAvCiB;;cAyClB,YAAY,YACR;gBAAI,YAAY,SAAS,gBAAgB,aAAa,SAAS,KAE/D;;yBAAG,OAAO,IACb;AA3CG;;cAAK,cACL;cAAK,eACL;cAAK;eACR;;;;;mCAGG;gBAAI,OAAO,WAAY,aAAa,OACpC;mBAAO,6BAAmB,YAC7B;;;;sCAEa;yBACV;;gBAAI,OAAO,WAAY,aAAa;gBAC5B,UAAY,KAAK,MAEzB;;mBAAO,iBAAiB,qBAAqB;uBAAM,QAAQ,OAAO;AAAlE,eACA;mBAAO,iBAAiB,UAAU;uBAAM,QAAQ,OAAO;AAAvD,eAEA;;mBAAO,iBAAiB,UAAU,UAAC,GAC/B;uBAAK,eAEL;;oBAAG,OAAK,aACN;iCAAa,OACb;2BAAK,cACN;AACJ;AAPD,eASA;;mBAAO,sBAAsB,KAEhC;;;;iCAkBA;AADO;gBAEC,WAAa,KAAK,MAC1B;;mBACC,qCACE,sDAAM,MAAM,KACR,eAGR;;;;;EAzDiB,gB;;AA4DrB,IAAM,qBAAqB,4BAAC,UAC1B;;iBACW,qDAEZ;AAFG;AAFJ;;AAMA,SAAS,yBAAQ,MAAM,oBAAqB","file":"hot/hot-update.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport Grid from '../grid/Grid';\nimport CV from '../../models/CV';\n\n// Utils\nimport {getParameterByName} from '../../utils/all';\n\n// Actions\n import {viewActions} from './actions';\n\n\n\n//for testing only\nclass Layout extends React.Component{\n    constructor(props){\n        super(props);\n        this.scrollTimer = null;  \t     \n        this.scrollTicker = false;\n        this._bindEvents();\n    }\n\n    showGrid() {\n        if (typeof(window) === 'undefined') return false;\n        return getParameterByName('grid') === 'true';\n    }\n\n    _bindEvents() {\n        if (typeof(window) === 'undefined') return;\n        const { actions } = this.props;\n      \n        window.addEventListener('orientationchange', () => actions.resize(window), false);\n        window.addEventListener('resize', () => actions.resize(window), false);\n\n        window.addEventListener('scroll', (e) => { \n            this.scrollTicker = true;\n\n            if(this.scrollTimer) {\n              clearTimeout(this.scrollTimer);\n              this.scrollTimer = null;\n            } \n        }, false);\n\n        window.requestAnimationFrame(this.rafUpdate);\n\n    }\n\n    rafUpdate = () => {\n        if (this.scrollTicker) {\n            this.scrollTicker = false;\n            this.setScroll(false);\n        } \n\n        window.requestAnimationFrame(this.rafUpdate);\n    }\n\n    setScroll = () => {\n        let scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\n        CV.scroll.y = scrollTop;\n    }\n\n  \trender() {\n     // const {children, browser, showGrid, location} = this.props;\n     const { children } = this.props;\n    \treturn (\n    \t\t<div>\n    \t\t  <Grid show={this.showGrid()} />\n          { children }\n    \t\t</div>\n    \t);\n  \t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(viewActions, dispatch)\n  };\n}\n\nLayout = connect(null, mapDispatchToProps) (Layout);\nexport default Layout;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/containers/layout/Layout.js"],"sourceRoot":""}